ngskit4b assemb 
de Novo assemble filtered reads into contigs

This document is derived from documentation supplied with BioKanga 4.2.0

Version 0.4.6
===========================
Released January 16th 2020


de Novo assembles previously filtered PE reads into contigs utilising overlap
extensions on the PE reads with merging into contigs when PE1 overlaps into
PE2. Expects PE reads to have been pre-processed by 'ngskit4b filter' so as to
reduce sequencing induced artefacts.

Assenbly Options:

-h, --help
	This option will display the list of options and brief help as to the
	function of each of these options together with default values, and
	then terminates the process

-v, --version, --ver
	This option displays the ngskit4b build version and then
	terminates

-f, --FileLogLevel=<int>
	Use this option to control the level of diagnostics written to screen
	and logfile. Currently most log messages are written at the default
	level of diagnostics (3)

-F, --log=<file>
	Use to specify the log file to which diagnostics are to be written.
	If not specified then diagnostics will be written to screen only

-q, --sumrslts=<file>
	Output results summary to this SQLite3 database file

-w, --experimentname=<str>
        Specifies experiment name to use in SQLite3 database file

-W, --experimentdescr=<str>
	Specifies experiment description to use in SQLite3 database file

-m, --mode=<int>
	Processing mode:
		0 - standard stringency assembly (default)
		1 - high stringency assembly
		2 - low stringency quick assembly

-t, --trimends=<int>
	When loading reads or high confidence seed contigs then trim 5' and 3'
	ends by this many bases (default 0, range 1..50)

-X,--minseqlen=<int>
	Only accept reads or high confidence seed contigs, after any
	trimming, which are of at least this length (default 90, range 70..500)

-x, --trimpe2se=<int>
	Trim PEs both 5' and 3' ends by this many bases when treating these as
	individual SE sequences (default 10, range 0..50) in the later
	processing phases

-w, --senseonly
	Process sequences as strand specific

-e, --singleend
	Process all paired ends as if single ended

-p, --maxpasses=<int>
	Limit number of de Novo assembly processing passes to this maximum
	(defaults: standard 50, stringent 75, quick 30) range 20..10000

-r, --reducethressteps=<int>
	Reduce overlap thresholds over this many steps (defaults: 3 quick, 5
	standard, 8 stringent assemble, range 2..10)

-P, --passthres=<int>
	de Novo assembly process pass threshold at which to start writing
	intermediate checkpoint assemblies (defaults to 0, only write
	completed assemblies)
	Output checkpoint assemblies to the multifasta file prefix name as
	specified with the '--out' parameter, the prefix name will be suffixed with:
	'.Pass<P>.SE.fasta' contains assembled contigs as at pass <P>
	'.Pass<P>.PE1.fasta' contains any unassembled into contigs PE1 sequences
	'.Pass<P>.PE2.fasta' contains any unassembled into contigs PE2 sequences

-s, --maxsubs100bp=<int>
	Allow max induced substitutions per 100bp overlapping sequence
	fragments (defaults to 1, range 0..5)

-S, --maxendsubs=<int>
	Allow max induced substitutions in overlap 12bp ends (defaults to 0,
	range 0..6)

-j, --initseovlp=<int>
	Initial minimal SE overlap required to merge SEs (defaults to 150,
	range 20..500)

-J, --finseovlp=<int>
	Final minimal SE overlap required to merge SEs (defaults to 25, range
	20..initseovlp)

-k, --initpeovlp=<int>
	Initial minimal PE total sum of end overlaps required to merge PEs
	(defaults to 150, range 35..200)

-K, --finpeovlp=<int>
	Final minimal PE total sum of end overlaps required to merge PEs
	(defaults to 35, range 35..initpeovlp)

-g, --minpe2seovlp=<int>
	Minimal overlap of PE1 onto PE2 required to merge as SE (defaults to
	20, range 15..100)

-R, --pe2sesteps=<int>
	When less or equal to this threshold steps then treat PE1 and PE2 as
	individual SE sequences if excessive lengths (defaults to 3, set 0 to
	disable)

-M, --orientatepe=<int>
       Use to specify the orientation of the paired end reads; individual end
       sequences may be either sense or antisense dependent on the library
       preparation protocols:
       	0  PE1/PE2 is sense/antisense (PE short insert)
	1  PE1/PE2 is sense/sense (MP Roche 454)
	2  PE1/PE2 is antisense/sense (MP Illumina circularised)
	3  PE1/PE2 is antisense/antisense (MP SOLiD)

-a, --inpe1=<file>
	Optionally Load 5' paired end previously assembled fragments or
	filtered reads 5' paired ends from fasta file

-A, --inpe2=<file>
	Optionally Load 3' paired end previously assembled fragments  or
	filtered reads 3' paired ends from fasta file

-c, --seedcontigsfile=<file>
	Optionally load high confidence fasta seed contigs or previously
	assembled fasta SE sequences file. If seeds are in fastq format then
	their length must be less than 64Kbp.

-i, --inartreducfile=<file>
	Load from previously generated 'ngskit4b filter' artefact reduced
	packed reads file

-o, --out=<file>
	Output assembled contigs to this multifasta file, this file name is a
	prefix and will be suffixed with:
	'.SE.fasta'  contains assembled contigs
	'.PE1.fasta' contains any unassembled into contigs PE1 sequences
	'.PE2.fasta' contains any unassembled into contigs PE2 sequences

-T, --threads=<int>
	Number of processing threads 0..n (defaults to 0 which sets threads
	to number of CPU cores, max 128)

Note: Options and associated parameters can be entered into an option parameter
file, one option and it's associated parameter per line.
To specify usage of this option paramter file to the ngskit4b toolkit
components then precede its name with '@', e.g. ngskit4b assemb @myparams.txt
