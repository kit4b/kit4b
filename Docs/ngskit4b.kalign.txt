ngskit4b kalign
NGS Alignments

This document is derived from documentation supplied with BioKanga 4.2.0

Version 0.4.6
===========================
Released January 16th 2020

Use this subprocess when aligning NGS SE or PE reads (DNA or RNA-seq) to a
'ngskit4b index' indexed genome assembly, sequences, or transcriptome.

-h, --help
	This option will display the list of options and brief help as to the
	function of each of these options together with default values, and
	then terminates the process

-v, --version, --ver
	This option displays the ngskit4b build version and then
	terminates

-f, --FileLogLevel=<int>
	Use this option to control the level of diagnostics written to screen
	and logfile. Currently most log messages are written at the default
	level of diagnostics (3)

-F, --log=<file>
	Use to specify the log file to which diagnostics are to be written.
	If not specified then diagnostics will be written to screen only

-q, --sumrslts=<file>
	Output results summary to this SQLite3 database file

-w, --experimentname=<str>
        Specifies experiment name to use in SQLite3 database file

-W, --experimentdescr=<str>
	Specifies experiment description to use in SQLite3 database file

-m, --mode=<int>
	This allows the user to trade off sensitivity against alignment
	throughput. In the less sensitive mode larger anchor K-mer windows are
	used and thus reads with more mismatches may not be aligned, in the
	more sensitive mode smaller anchor K-mer windows are used thus
	resulting in reads with more mismatches becoming alignable but at the
	cost of reducing processing throughput.
	Four levels of sensitivity are selectable, ranging from low (-m3),
	default (-m0), more sensitive (-m1), and ultra-sensitive (-m2).
	The default sensitivity (-m0) is targeting a reasonable balance
	between sensitivity and throughput for most alignment tasks.

-Q, --alignstrand=<int>
	Align to specified strand: 
        0 - Alignments to either sense or antisense strands accepted 
        1 - Only alignments to sense '+' accepted
        2 - Only alignments to antisense '-' accepted
        Default is to accept alignments to either sense or antisense strands

-a, --microindellen=<int>
	MicroInDels will be detected and reported with up to the maximum InDel
	length as specified by this option. Processing for microInDels will be
	on those reads which are otherwise unalignable with up to the maximum
	specified aligner induced substitutions. To be accepted as a microInDel
	read there must be suport from at least one other read at the same loci
	also determined as containing a microInDel. Acceptable maximum InDel
	length can be specified to be in the range of 1 to 20.

-A, --splicejunctlen=<int>
 	RNA-seq reads are likely to include many which span splice junctions.
	This option allows for the exploration of splice junction spanning
	reads on those reads which are unalignable using either standard or
	micoInDel processing. The user specifies the maximum allowed junction
	separation (25 to 100000bp). Potential junctions are scored on both
	separation distance and presence of canonical doner/acceptor sites,
	and the highest scored junction is reported provided there are at
	least two reads covering that same splice junction.

-c, --minchimeric=<int>   
        Reads may contain many subsequence artefacts. These artefacts may result
        from a number of causes including retained adaptors, or errors in the targeted
        assembly. Chimeric alignments are alignments in which the read is automatically
        end (both 5' and 3') trimmed (adaptive end trimming) until the read can be aligned
        provided that the aligned subsequence is at least the user specified minimum length
        and the number of required substitutions is proportional to that allowed for full
        length read alignments.
        The minimum chimeric length is specified as a percentage of the full read length
        and must be either 0 (disables chimeric processing) or in the range of 50..99. 
        
-C, --colorspace
 	If aligning SOLiD colorspace reads then this option must be specified.
	Additionally, the target genome suffix array must have been generated
	by 'ngskit4b index' in colorspace mode with the '-C' option.

-k, --pcrwin=<int>
  	PCR differential amplification artefact reduction window length
	Default is for no artefact reduction

-g, --quality=<int>
	Although Kanga does not use quality scores as it's alignment
	discriminant, the distribution of aligner induced substitutions
	relative to quality scores can be generated in output format 3 ('-M3')
	provided an output statistics file was also specified with the
	'-O<file>' option. The '-g' option parameter specifies the input reads
	fastq quality score type which can be one of the following:
		0 for Sanger, 1 for Illumia 1.3+
		2 for Solexa < 1.3
		3 (default) specifying that quality scores are not of interest
		  and not to be saved

 -r, --mlmode=<int>
 	When SE aligning and if the user has requested that a choice of a single aligned loci
        for a read mapping to multiple loci is to be selected as the accepted loci then
        the user may choose from the following option parameter values:
 		0 - (default) none of the reads mapping to multiple loci will be accepted
		    as being aligned.
 		1 - do not accept any read which aligns to multiple loci but report statistics
                    of these multialigned reads
 		2 - randomly select one of the multiple loci as being the accepted aligned loci
 		3 - the accepted loci will be a loci which is overlapped by at
		    least one uniquely aligned read. These overlaps (usually
		    multiple overlaps for any  given read) are scored according
		    to both the degree of overlap and the  number of uniquely
		    aligned reads overlapped at that loci. The highest  scoring
		    overlap loci will be the reported accepted loci. If no
		    overlaps  then the read is not accepted as being aligned.
 		4 - multiple loci mapped reads are proximally clustered, and
		    the cluster loci which is highest scoring is the loci
		    accepted for that read. Reads which cluster with no other
		    read will not be accepted as aligned.
 		5 - output all loci to which all reads aligned including
		    multialigned reads  CAUTION: this may result in a huge
		    result file being generated as some reads may align to many
		    thousands of loci.
	Note: If proximal clustering with other multiple loci mapped reads
	      (-r4) is specified then overlaps with reads which are uniquely
	      aligned will first be explored before the proximal clustering.

-y, --trim5=<int>
	Trim this number of bases from 5' end of reads when loading raw reads
        before attempting to align reads

-Y, --trim3=<int>
	Trim this number of bases from 3' end of reads when loading raw reads
        before attempting to align reads

-l, --minacceptreadlen=<int> 
        After any end trimming only accept read for further processing if read 
        is at least this length (default is 50bp, range 15..2000)

-L, --maxacceptreadlen=<int> 
        After any end trimming only accept read for further processing if read 
        is no longer than this length (default is 500bp, range minacceptreadlen..2000)

-R, --maxmulti=<int>
 	When SE aligning then a limit can be set on the number of loci any 
        multialigned read may align to, and only those reads aligning within
        this limit will then be processed according to the mlmode as specified 
        by the '-r' option. The default is for at most 5 multialigned loci, 
        any read which is aligning to more than the specified maximum number of 
        loci will be deemed as non-alignable.
	Note: In all multiloci processing modes ( '--mlmode' ) other than 5
	then the user can specifiy at most 500 as the limit; in
	multiloci processing mode 5 ( '--mlmode=5' ) then the user can specify
	up to 100000 as the limit.

-X, --clampmaxmulti
	Treat reads mapping to more than limit set with '-R<n>' as if exactly
	<n> matches (default is not to further process reads exceeding limit
	set with '-R<n>')


-b, --bisulfite
	If the reads were generated as a result of bisulfite processing
	then this option must be specified. Additionally the target genome
	suffix array must have been generated in bisulfite methylation
	patterning mode.

-e, --editdelta=<int>
	The user can specify that accepted matches must be at least this
	Hamming distance from the next best match. If not specified then the
	default is 1. A maximum of 2 Hammings (mismatches only) can be specified.

-s, --substitutions=<int>
	This option is used to specify the maximum number of aligner induced
	substitutions in any accepted alignment per 100bp of read length. 
        If not specified then a default of 10bp per 100bp of read length is
        used, e.g. if the read length is 75 then by default the maximum allowed
        substitutions for that read will be 7.

-n, --maxns=<int>
	Use to specify the maximum number of indeterminate 'N's per 100bp of
        read length before treating that read as unalignable. If not specified 
        then will be defaulted to one indeterminate 'N' allowed per 100bp of
        read length.

-x, --minflankexacts=<int>
 	With current sequencing technologies most errors tend to be towards the
	read flanks, This option allows the user to request that aligned reads
	will be 5' and 3' flank trimmed towards the centre of the read until at
	least this number of exactly matching bases are encountered. The
	default is for no flank trimming. If a read after flank trimming has
	been reduced to less than 50% of it's original length then that read is
	no longer accepted as being aligned. This option is also very useful
	in RNA-seq processing as it allows for splice site boundaries to be
	more clearly defined as reads which extend over an exon boundary into
	the intron are likely to have large numbers of errors in the intron
	aligned flank, and this flank will be trimmed off.

-p, --snpreadsmin=<int>
 	If this option is specified then SNP detection is enabled. The option
	parameter is used to specify the required minimum read coverage at any
	loci before processing that loci for SNP determination. The default is
	for no SNP processing

-K, --markerlen=<int>
	Output marker sequences of this length with centralised SNP, output to
	SNP file name with '.marker' apended (default no markers, range
	25..500)

-G, --markerpolythres=<dbl>
	Maximum allowed marker sequence base polymorphism independent of
	centroid SNP (default 0.333, range 0.0 to 0.5)

-P, --qvalue=<dbl>
	QValue controlling FDR, using Benjamini-Hochberg, on reported SNPs.
	Alignment loci are processed for putative SNPs using binominal CDF with
	an expected error rate set to the maximum of either 0.01 or the
	observed error rate (number of substitutions/total aligned bases) for
	the current chromosome

-M, --format=<int>
	Results can be generated in a number of output formats. This option can
	be used to specify output as UCSC BED, or as SAM. 
	SAM can be specified '-M0' to only include those
	reads accepted as aligned, or with '-M1' to include all reads. If not
	specified then SAM output format is used. If SAM output specified
	and the output alignment file specified with '-o<file' has the
	extension '.bam', then BAM (compressed with bgzf) and associated BAI
	or CSI (if any targeted sequence > 512Mbp) index will be generated.

-t, --title=<string>
 	When generating results in BED format, this option parameter may be
	used to specify the track title

-B, --priorityregionfile=<file>
	Prioritise exact match alignments to loci regions in this BED file

-V, --nofiltpriority
	Do not filter priority region alignments

-N, --bestmatches
	Accept best '-R<N>' multiple alignments with alignments having at
	most '-s<max subs>'

-i, --in=<file>
	Input reads from these raw sequencer read files (.gz allowed),
	wildcards allowed if single ended

-U, --pemode=<int>
       Paired end processing mode, user can request that aligned reads which
       have no globally unique aligned paired read (orphans) be associated
       with paired reads which are locally unique within the the insert
       size range specified with the -d and -D parameters.
       U1 - paired end with recover orphan ends
       U2 - paired end no orphan recovery
       U3 - paired end with recover orphan ends treating orphan ends as SE
       U4 - paired end no orphan recovery treating orphan ends as SE

-d, --pairminlen=<int>
       Accept paired end alignments with apparent insert size of at
       least this (default = 100bp)

-D, --pairmaxlen=<int>
       Accept paired end alignments with apparent insert size of at most
       this (default = 1000)

-E, --pairstrand
	Process PE reads as if 5' and 3' are on same strand
        Useful for mate pair alignments

-u, --pair=<file>
	if raw paired end processing then input read pairs from these raw
	paired end files (.gz allowed).

-I, --sfx=<file>
	This option specifies the suffix array file (generated by kit4b)
	containing the target genome against which reads are to be aligned.
	If the '-C' colorspace option or the '-b' bisulphite processing option
	is specified then ngskit4b will check that the suffix array file was
	appropriately generated

-S, --snpfile=<file>
	Output SNPs (CSV format) to this file (default is to output file name
	with '.snp' appended)

-o, --out=<file>
	Primary alignment results will be written to this file which should be
	named appropriately for the requested output format as specified with
	the '-M' option parameter. If user has requested microInDel processing
	then these will be written to a separate results file having the same
	root name as the primary results file and having the extension '.ind'.
	If user has requested splice junction processing then these will be
	written to a separate results file having the same root name as the
	primary results file and having the extension '.jct'. If user has
	requested SNP processing then these will be written to a separate
	results file having the same root name as the primary results file and
	having the extension '.snp'.
	If the specified output file has file extension of '.gz' then the file
	will be generated in gzip compressed format. If SAM output specified
	(either '-M5' or '-M6') and the output file has the extension '.bam',
	then BAM (compressed with bgzf) and associated BAI index will be
	generated.

-j, --nonealign=<file>
 	User may specify that all unalignable reads be written to this file for
	post-processing

-J, --multialign=<file>
	User may specify that all read sequences which align to more than one loci be
	written to this file

-O, --stats=<file>
       Output aligner induced substitution distribution stats (not supported
       for '-M6' output mode) or paired end length distributions to this file

-L, --siteprefs=<file>
	output aligned reads start site octamer preferencing to this file

-l, --siteprefsofs=<int>
	offset read start sites when processing site octamer preferencing,
	range -100..100 (default is -4)

-H, --contaminants=<file>
	Optional multifasta file containing putative contaminant sequences
	(perhaps adaptor or primers) which may be overlapping onto the reads.
	If overlaps are detected then the overlapped reads will be
	appropriately trimmed to remove the contaminant sequence.

-Z, --chromexclude=<string>
	High priority - regular expressions defining chromosomes to exclude

-z, --chromeinclude=<string>
	Low priority - regular expressions defining chromosomes to include

-0, --chimericrpt
        Report chimeric trimming detail for individual reads when processing
        for unique alignments (default is not to report)

-1, --snpnonrefpcnt=<int>
	Min percentage of non-ref bases at any putative SNP loci (defaults to
	25, range 1 to 35)

-2, --pecircularised
	Experimental - set true if processing for PE circularised fragments
	spanning

-3, --petranslendist
	Experimental - include PE length distributions for each transcript in
	output stats file

-4, --rptsamseqsthres=<int>
	Write all SAM reference sequence names to SAM (BAM) file header if
	number of reference sequences <= this limit (defaults to 10000). If
	number of reference sequences above this threshold then only those
	reference sequences to which there are alignments will be
	written to the SAM (BAM) file header.

-5, --lociconstraints=<file>
	A major problem with alignments to incomplete targets is the reliable
	characterisation of DE and SNPs. This is because reads are mistakenly
	aligned to available target sequences even though they may have
	originated elsewhere, perhaps from homologous sequences, ortholog or
	paralog whose sequence is not currently present as a target. However
	the non-target potential source sequences may have some known
	polymorphic variations relative to a target sequence even though the
	complete non-target source sequence is unknown. ngskit4b can utilise
	any known polymorphic variation as a discriminate when aligning reads
	to a target sequence by filtering out reads which show that variation
	at specific loci when aligned after applying the usual alignment
	constraints. Thus if it is known that at loci ChromA.1077 the target
	reference base is a 'A' and there is likely to be some polymorphic
	variation in the non-target sequence then all reads potentially
	accepted as aligned covering the loci ChromA.1077 will be rejected if
	the base in reads covering that loci are not 'A'. Polymorphic variation
	elsewhere on ChromA in reads will be accepted.
	To provide the above functionality, a CSV file is created by the user,
	and specified to 'ngskit4b align' with parameter '-5constraints.csv',
	which is expected to contain four comma separated fields per row:
	    "TargSeq",StartLoci,EndLoci,AcceptBases
	Whereby -
	    "TargSeq" is the name of the target sequence, must match one
	        of the sequence names in the target.
	    StartLoci is the 0 based offset on the target sequence of the
		first loci constrained base
	    EndLoci is the 0 bases offset on the target sequence of the
		last loci constrained base (can be equal to StartLoci for a
		single base constrained loci or after StartLoci for a
		constrained loci range)
	    AcceptBases are those bases which will be accepted in reads
		covering constrained loci. Bases may be explicitly specified
		as 'A','C','G','T' or to represent the base in the underlying
		target then as 'R'.
                A combination may be specified , for example as "AC" in which
		case only reads with bases 'A' or 'C' within the loci range
		will be alignment accepted.

	There is an internal limit of 64 different "TargSeq"s with a total of
	6400 loci base constraints accepted for processing.

-6, --pcrprimersubs=<primersubs>
	Many readsets have significant numbers of mismatches over the 5' first
	12 bases which are independent of their Phred score and may be due to
	hexamer primer binding errors. If aligning with very stringent allowed
	mismatches then these 5' errors may prevent reads from aligning even
	though the remainder of the read meets the alignment critera. If the
	<primersubs> is set to be more than 0 then an initial alignment is
	made allowing a total of <primersubs> + <substitutions>. Subsequent
	processing then attempts to bring the total number of subsitutions in
	the read down to allowed <substitutions> by iteratively correcting up
	to <primersubs> mismatches in the 5' 1st 12 bases.

-7, --snpcentroid=<file>
        Output SNP centroid distributions (CSV format) to this file (default is for no
        centroid processing)

-#, --samplenthrawread=<int>
        Sample every Nth raw read or read pair for processing (default 1, range 1..10000)
        The default of 1 means that all reads will be processed, if specified as 2 then 
        every second read will be processed. This parameter allows a subset of reads to be
        quickly processed when exploring parameter space for optimum settings without the
        time overhead of processing the complete set of reads.

-T, --threads=<int>
	Number of processing threads 0..n (defaults to 0 which sets threads
	to number of CPU cores, max 128)

Note: Options and associated parameters can be entered into an option parameter
file, one option and it's associated parameter per line.
To specify usage of this option paramter file to the ngskit4b toolkit
components then precede its name with '@', e.g. ngskit4b kalign @myparams.txt


Non-aligned reads are characterised into one of the following classes:
NA: Not processed for alignment
AA: Alignment accepted
EN: Excessive indeterminate (Ns) bases
NL: No potential alignment loci
MH: Mismatch delta (minimum Hamming) criteria not met
ML: Aligned to multiloci
ET: Excessively end trimmed
OJ: Aligned as orphaned splice junction
OM: Aligned as orphaned microInDel
DP: Duplicate PCR
DS: Duplicate read sequence
FC: Aligned to filtered target sequence
PR: Aligned to a priority region
UI: PE under minimum insert size
OI: PE over maximum insert size
UP: PE partner not aligned
IS: PE partner aligned to inconsistent strand
IT: PE partner aligned to different target sequence
UP: PE alignment not accepted
LC: Alignment violated loci base constraints


