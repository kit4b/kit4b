ngskit4b SQLite Schemas

This document is derived from documentation supplied with BioKanga 4.2.0

Version 0.4.6
===========================
Released January 16th 2020

SNPs and Markers
----------------

SNPs and Markers employ the same SQLite schema with SNPs only processing not
populating the TblMarkers and TblMarkerSnps tables -

Following database schema with 7 tables is utilised

Tables
------

TblExprs	One row for each experiment
TblCults      	One row for each cultivar or species
TblSeqs       	One row for each sequence (DNA chromosome or assembly contig if
		genomic, transcript if RNA)
TblLoci		One row for each loci identified on a sequence plus the
		canonical base at that loci
TblSnps		One row for each SNP at identified loci for each cultivar and
		experiment
TblMarkers      One row for each marker at an identified loci plus cultivar
		specific base and score
TblMarkerSnps   One row for each SNP processed and contributing to a specific
		identified marker

In each table the following columns are defined
TblExprs	       		One row for each experiment
........
	ExprID INTEGER PRIMARY KEY ASC, -- Uniquely identifies this experiment
	                                -- instance
	ExprType INTEGER                -- type, markers 0 or SNPs 1
	ExprInFile VARCHAR(200),        -- Input CSV filename
	ExprName VARCHAR(50) UINQUE,    -- Short name of this experiment
	ExprDescr VARCHAR(200),	        -- Describes the experiment
	CultName VARCHAR(50)	        -- Short name of target cultivar
	                                -- against which alignments were made

TblCults        		One row for each cultivar or species
........
	CultID INTEGER PRIMARY KEY ASC,	-- Uniquely identifies this
	                                -- cultivar instance
	CultName VARCHAR(50) UNIQUE	-- Short name of this cultivar

TblSeqs  			One row for each sequence (DNA chromosome or
.......				assembly contig if genomic, transcript if RNA)
	SeqID INTEGER PRIMARY KEY ASC,	-- Uniquely identifies this
					-- sequence instance
	ExprID INTEGER,			-- Sequence was target in this exper
	SeqName	VARCHAR(50)  		-- Short name of this sequence

TblLoci				One row for each loci identified on a sequence
.......				plus the  canonical base at that loci
	LociID INTEGER PRIMARY KEY ASC,	-- Uniquely identifies loci instance
	ExprID INTEGER,			-- Loci in this experiment
	SeqID INTEGER,			-- Loci is on this sequence instance
	Offset INTEGER,                 -- And at this offset on the sequence
	Base VARCHAR(1)			-- With the sequence offset having this
					-- canonical base

TblSnps				One row for each SNP at an identified loci for
.......				each cultivar and experiment
	SnpID INTEGER PRIMARY KEY ASC,	-- Uniquely identifies this SNP inst
	ExprID INTEGER,			-- SNP identified within experiment
	CultID INTEGER,			-- SNP is in this cultivar relative to
					-- the experiment target cultivar
	LociID INTEGER,			-- Identifies the loci instance at
					-- which the SNP is being called
	Acnt INTEGER DEFAULT 0,		-- Number of bases A in relative
					-- cultivar reads covering the SNP loci
	Ccnt INTEGER DEFAULT 0,		-- Number of bases C in relative
					-- cultivar reads covering the SNP loci
	Gcnt INTEGER DEFAULT 0,		-- Number of bases G in relative
					-- cultivar reads covering the SNP loci
	Tcnt INTEGER DEFAULT 0,		-- Number of bases T in relative
					-- cultivar reads covering the SNP loci
	Ncnt INTEGER DEFAULT 0,		-- Number of bases N in in relative
					-- cultivar reads covering the SNP loci
	TotCovCnt INTEGER DEFAULT 0,	-- Total number of bases in relative
					-- cultivar reads covering the SNP loci
	TotMMCnt INTEGER DEFAULT 0	-- Total number of mismatches bases in
					-- relative cultivar reads covering the
					-- SNP loci

TblMarkers   			One row for each marker at an identified loci
..........			plus cultivar specific base and score
	MarkerID INTEGER PRIMARY KEY ASC,-- Uniquely identifies this instance
	ExprID INTEGER,	            	-- marker identified within this exper
	CultID INTEGER,			-- marker is in this cultivar relative
					-- to the experiment target cultivar
	LociID INTEGER,			-- Identifies the loci instance at
					-- which the marker is being called
	Base VARCHAR(1),		-- Called marker base
	Score INTEGER	 	     	-- Called marker score

TblMarkerSnps   		One row for each SNP processed and contributing
.............			to a specific  identified marker
	MarkerSnpsID INTEGER PRIMARY KEY ASC,-- Uniquely identifies this SNP
	SnpID INTEGER,			-- Identifies SNP instance
	MarkerID INTEGER,		-- Used to generate this marker instance


Differential Expressions
------------------------
For Differential Expression, the following schema with 4 tables is utilised

Tables
TblExprs		One row for each experiment
TblTrans         	One row for each transcript
TblExpres  		One row for each transcript differentially expressed
TblBins     		One row for each bin count set


In each table the following columns are defined
TblExprs			One row for each experiment
........
	ExprID INTEGER PRIMARY KEY ASC, -- Uniquely identifies this experiment
	ExprType INTEGER               	-- type, DE 2
	ExprInFile VARCHAR(200),        -- Input CSV filename
       	ExprName VARCHAR(50) UINQUE,	-- Short name of this experiment
       	ExprDescr VARCHAR(200),		-- Describes the experiment
	CtrlConditions VARCHAR(1000),	-- Describes the control conditions
	ExprConditions VARCHAR(1000),	-- Describes the experimental condition
	NumBins INTEGER                 -- Number of bins for Pearson analysis

TblTrans         		One row for each transcript
........
	TransID INTEGER PRIMARY KEY ASC,-- Uniquely identifies this transcript
	ExprID INTEGER,			-- in this experiment
	TransName VARCHAR(100) UNIQUE,	-- Short name of this transcript
	Exons INTEGER,	 	       	-- number of exons
	TransLen  INTEGER,     	       	-- transcript length
	TransAnnotation VARCHAR(1000)  	-- any known annotation for transcript

TblExpres         	One row for each transcript differentially expressed
.........
	ExpresID INTEGER PRIMARY KEY ASC,-- Uniquely identifies this expression
	ExprID INTEGER,		      	-- in this experiment
	TransID INTEGER,		-- expression is on this transcript
	Class INTEGER                   -- classification
	Score INTEGER			-- Overall DE score
	DECntsScore INTEGER,            -- Counts only DE score
	PearsonScore INTEGER,           -- Pearson only DE score
	CtrlUniqueLoci INTEGER,		-- number of unique loci within control
	ExprUniqueLoci INTEGER,		-- number of unique loci within experim
	CtrlExprLociRatio REAL		-- control/experiment unique loci ratio
	PValueMedian REAL
	PValueLow95 REAL
	PValueHi95 REAL
	TotCtrlCnts INTEGER
	TotExprCnts INTEGER
	TotCtrlExprCnts INTEGER
	ObsFoldChange REAL
	FoldMedian REAL
	FoldLow95 REAL
	FoldHi95 REAL
	ObsPearson REAL
	PearsonMedian REAL
	PearsonLow95 REAL
	PearsonHi95 REAL
	CtrlAndExprBins INTEGER    	-- intersect of control and experiment
					-- bins having at least one attributed
					-- count
	CtrlOnlyBins INTEGER 		-- control bins having at least one
					-- attributed count with same bin in
					-- experiment having no counts
	ExprOnlyBins INTEGER		-- experiment bins having at least one
					-- attributed count with same bin in
					-- control having no counts


TblBins     One row for each bin count set
.......
	BinID INTEGER PRIMARY KEY ASC,	-- Uniquely identifies this bin instance
	ExprID INTEGER,			-- in this experiment
	TransID INTEGER,	    	-- bins for this transcript
	ExpresID INTEGER,	    	-- and this expression
	NthBin  INTEGER,	    	-- Nth bin along the transcript
	CtrlCounts INTEGER,	    	-- control counts in this bin
	ExprCounts INTEGER	    	-- experiment counts in this bin


SQLite Results Summary Schema
-----------------------------

TblExprs
........
	ExprID INTEGER PRIMARY KEY ASC,	-- Uniquely identifies this experiment
    	ExprName VARCHAR(50) UNIQUE,	-- Experiment name
    	ExprTitle VARCHAR(50),		-- Experiment title
    	ExprDescr VARCHAR(1000)		-- describes Experiment

TblProcess
..........
   	ProcessID INTEGER PRIMARY KEY ASC, -- Uniquely identifies this process
	ProcessName VARCHAR(50),    	-- process name
      	ProcessTitle VARCHAR(50),	-- process title
       	ProcessDescr VARCHAR(1000)   	-- describes process

TblProcessing
.............
	ProcessingID INTEGER PRIMARY KEY ASC,	-- Uniquely identifies
	ExprID INTEGER,			-- processing in this experiment
	ProcessID INTEGER,    	    	-- using this process
	ProcessVer VARCHAR(20)		-- process version
	Start TIMESTAMP,      	   	-- processing started
	Finish TIMESTAMP,     	       -- processing completed
	ResultCode INTEGER    	       -- processing end result code

TblProcessingLog
................
	ProcessingLogID INTEGER PRIMARY KEY ASC, -- Uniquely identifies inst
	ProcessingID INTEGER,		-- identifies this processing instance
	LogText VARCHAR(2000)		-- log text

TblParams
.........
	ParamID INTEGER PRIMARY KEY ASC, -- Uniquely identifies this parameter
	ProcessingID INTEGER,		-- identifies this processing instance
	ParamType INTEGER,		-- parameter value type
	ParmName VARCHAR(50),		-- parameter name
      	ParmValue VARCHAR(2000),   	-- parameter value

TblResults
..........
	ResultID INTEGER PRIMARY KEY ASC,-- Uniquely identifies this result
	ProcessingID INTEGER,	      	-- identifies this processing instance
       	GroupAs VARCHAR(50),	      	-- result is part of this grouping
       	ResultType INTEGER,	      	-- result value type
	ResultName VARCHAR(50),		-- result name
      	ResultValue VARCHAR(500)  	-- result value

TblXYResults
............
	ResultID INTEGER PRIMARY KEY ASC,-- Uniquely identifies this result
	ProcessingID INTEGER,		-- identifies this processing instance
	GroupAs VARCHAR(50), 		-- result is part of this grouping
	ResultXType INTEGER,   		-- result X value type
	ResultXName VARCHAR(50),	-- result X name
       	ResultXValue VARCHAR(500), 	-- result X value
      	ResultYType INTEGER,	  	-- result Y value type
	ResultYName VARCHAR(50),  	-- result Y name
	ResultYValue VARCHAR(500),   	-- result Y value

